apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.jmarkstar.turisthelper"
        minSdkVersion 16
        targetSdkVersion 22 //the permissions will be asked them when the user install the apk, for android 23 and 24 too.
        versionCode 2
        versionName "1.0"
    }

    signingConfigs {
        //this is used when you will build a apk by gradle
        release

        //this is used when you run the app by android studio
        debug {
            keyAlias 'your_key_alias'
            keyPassword 'your_key_password'
            storeFile file('/your/file/keystore.jks')
            storePassword 'your_store_password'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
            ext.betaDistributionReleaseNotes = "adding fabric settings."
            ext.betaDistributionEmails = "mestrella.1991@gmail.com"
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions{
        abortOnError false
    }
}

//Loading signing properties
def Properties props = new Properties()
def propFile = new File('keystore.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'keystore.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
}else {
    println 'keystore.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.github.bumptech.glide:glide:3.5.2'
    compile 'com.google.android.gms:play-services-maps:9.2.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.jakewharton:butterknife:8.3.0'
    apt 'com.jakewharton:butterknife-compiler:8.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
}
